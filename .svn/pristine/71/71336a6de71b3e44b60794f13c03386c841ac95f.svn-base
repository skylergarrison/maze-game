package ui;

import android.support.v7.app.ActionBarActivity;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.Toolbar;
import android.util.Log;

import android.annotation.TargetApi;
import android.content.Context;
import android.content.Intent;
import android.os.Build;
import android.os.Bundle;
import android.os.Handler;
import android.view.Menu;
import android.view.MenuItem;
import android.view.MotionEvent;
import android.view.View;
import android.view.View.MeasureSpec;
import android.view.View.OnTouchListener;
import android.widget.AdapterView.OnItemSelectedListener;
import android.widget.EditText;
import android.widget.ProgressBar;
import android.widget.Toast;
import wsgarrison.ui.R;

@TargetApi(Build.VERSION_CODES.HONEYCOMB)
public class PlayActivity extends AppCompatActivity{

	private ProgressBar batteryProgress;
    private int batteryStatus = 2500;
    private int pathLength = 42;
    boolean manual;
    boolean pause = false;
    boolean win = true;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		
		Bundle extras = getIntent().getExtras();
		if (extras != null) {
		    manual = extras.getBoolean("manual");
		}
		
		if(manual==true){
			setContentView(R.layout.play_activityman);
			
		}else{
			setContentView(R.layout.play_activity_auto);
		}
		
		Toolbar myToolbar = (Toolbar) findViewById(R.id.my_toolbar);
	    setSupportActionBar(myToolbar);
	    
	    batteryProgress = (ProgressBar) findViewById(R.id.progressBar2);
		batteryProgress.setProgress(batteryStatus);
	}
	

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		if(manual==true){
			getMenuInflater().inflate(R.menu.play_menu, menu);
		}else{
			getMenuInflater().inflate(R.menu.play_menu2, menu);
		}
		
		return true;
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		// Handle action bar item clicks here. The action bar will
		// automatically handle clicks on the Home/Up button, so long
		// as you specify a parent activity in AndroidManifest.xml.
		int id = item.getItemId();
		if (id == R.id.action_back) {
			Log.v("Action Msg", "Selected: " + item.toString());
			
			Context context = getApplicationContext();
			CharSequence text = item.toString();
			int duration = Toast.LENGTH_SHORT;

			Toast toast = Toast.makeText(context, text, duration);
			toast.show();
			
			this.goBack(getCurrentFocus());
			return true;
		}
		if (id == R.id.action_map) {
			Log.v("Action Msg", "Selected: " + item.toString());
			
			Context context = getApplicationContext();
			CharSequence text = item.toString();
			int duration = Toast.LENGTH_SHORT;

			Toast toast = Toast.makeText(context, text, duration);
			toast.show();
			return true;
		}
		if (id == R.id.action_walls) {
			Log.v("Action Msg", "Selected: " + item.toString());
			
			Context context = getApplicationContext();
			CharSequence text = item.toString();
			int duration = Toast.LENGTH_SHORT;

			Toast toast = Toast.makeText(context, text, duration);
			toast.show();
			return true;
		}
		if (id == R.id.action_solution) {
			Log.v("Action Msg", "Selected: " + item.toString());
			
			Context context = getApplicationContext();
			CharSequence text = item.toString();
			int duration = Toast.LENGTH_SHORT;

			Toast toast = Toast.makeText(context, text, duration);
			toast.show();
			return true;
		}
		if (id == R.id.action_playbutton) {
			Log.v("Action Msg", "Selected: " + item.toString());
			
			Context context = getApplicationContext();
			CharSequence text = item.toString();
			int duration = Toast.LENGTH_SHORT;

			Toast toast = Toast.makeText(context, text, duration);
			toast.show();
			
			pause = false;
			
			return true;
		}
		if (id == R.id.action_pausebutton) {
			Log.v("Action Msg", "Selected: " + item.toString());
			
			Context context = getApplicationContext();
			CharSequence text = item.toString();
			int duration = Toast.LENGTH_SHORT;

			Toast toast = Toast.makeText(context, text, duration);
			toast.show();
			
			pause = true;
			
			return true;
		}
		return super.onOptionsItemSelected(item);
	}
	
	public void goNext(View view) {
		Intent intent = new Intent(this, FinishActivity.class);
		intent.putExtra("win", win);
		intent.putExtra("path", this.pathLength);
		intent.putExtra("battery", this.batteryStatus);
		startActivity(intent);
	}
	
	public void goNextLose(View view) {
		Intent intent = new Intent(this, FinishActivity.class);
		win = false;
		batteryStatus = 0;
		intent.putExtra("win", win);
		intent.putExtra("path", this.pathLength);
		intent.putExtra("battery", this.batteryStatus);
		startActivity(intent);
	}
	
	public void goBack(View view) {
		Intent intent = new Intent(this, GeneratingActivity.class);
		startActivity(intent);
		
	}
	
	/**
	 * Test method for the decrement button to test the battery bar
	 */
	public void decrement(View view){
		if(this.batteryStatus>0){
			this.batteryStatus = this.batteryStatus - 50;
			batteryProgress.setProgress(batteryStatus);
			
			Log.v("Action Msg", "Decrement by 50");
			
		}else{
			Log.v("Action Msg", "Out of Battery!");
			
			Context context = getApplicationContext();
			int duration = Toast.LENGTH_SHORT;
	
			Toast toast = Toast.makeText(context, "Out of Battery!", duration);
			toast.show();
			
			this.goNextLose(getCurrentFocus());
		}
	}
	
	public void moveUp(View view){
		Log.v("movement log", "Move Up");
		
		Context context = getApplicationContext();
		int duration = Toast.LENGTH_SHORT;

		Toast toast = Toast.makeText(context, "Move Up", duration);
		toast.show();
	}
	
	public void moveDown(View view){
		Log.v("movement log", "Move Down");
		
		Context context = getApplicationContext();
		int duration = Toast.LENGTH_SHORT;

		Toast toast = Toast.makeText(context, "Move Down", duration);
		toast.show();
	}
	
	public void moveLeft(View view){
		Log.v("movement log", "Move Left");
		
		Context context = getApplicationContext();
		int duration = Toast.LENGTH_SHORT;

		Toast toast = Toast.makeText(context, "Move Left", duration);
		toast.show();
	}
	
	public void moveRight(View view){
		Log.v("movement log", "Move Right");
		
		Context context = getApplicationContext();
		int duration = Toast.LENGTH_SHORT;

		Toast toast = Toast.makeText(context, "Move Right", duration);
		toast.show();
	}
}